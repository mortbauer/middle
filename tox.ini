; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
  clean,
  check,
  ; {py36,py37,pypy},
  {py36,py37},
  report,
  docs

[testenv]
basepython =
;  pypy: {env:TOXPYTHON:pypy}
  py36: {env:TOXPYTHON:python3.6}
  py37: {env:TOXPYTHON:python3.7}
  ; {bootstrap,clean,check,report,coveralls,codecov,docs}: {env:TOXPYTHON:python3.6}
  {clean,check,report,codecov,docs}: {env:TOXPYTHON:python3.6}
setenv =
  ; py{36,37}: COVERAGE_FILE={envdir}/.coverage
  VIRTUALENV_NO_DOWNLOAD=1
  PYTHONPATH={toxinidir}/tests
  PYTHONUNBUFFERED=yes
passenv =
  *
usedevelop = false
deps =
  freezegun
  pytest
  pytest-travis-fold
  pytest-cov
commands =
  {posargs:pytest --cov --cov-report=term-missing -vv tests}
  ; cov: /usr/bin/env bash -c '{envpython} -m coverage combine {toxworkdir}/py*/.coverage'
  ; cov: coverage html --fail-under=85

# [testenv:bootstrap]
# deps =
#     jinja2
#     matrix
# skip_install = true
# commands =
#     python ci/bootstrap.py
[testenv:spell]
setenv =
  SPELLCHECK=1
commands =
  sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
  -r{toxinidir}/docs/requirements.txt
  sphinxcontrib-spelling
  pyenchant

[testenv:docs]
basepython = python3.6
deps =
  -r{toxinidir}/docs/requirements.txt
skip_install = true
commands =
  sphinx-build {posargs:-E} -b html docs dist/docs
  sphinx-build -b linkcheck docs dist/docs

[testenv:format]
basepython = python3.6
deps =
  black
skip_install = true
commands =
  black --verbose src tests setup.py

[testenv:check]
basepython = python3.6
deps =
  docutils
  check-manifest
  flake8
  readme-renderer
  pygments
  isort
  black
skip_install = true
commands =
  python setup.py check --strict --metadata --restructuredtext
  check-manifest {toxinidir}
  flake8 src tests setup.py
  isort --verbose --check-only --diff --recursive src tests setup.py
  black --verbose --check src tests setup.py

; [testenv:coveralls]
; deps =
;   coveralls
; skip_install = true
; commands =
;   coveralls []

[testenv:codecov]
deps =
  codecov
skip_install = true
commands =
  coverage xml --ignore-errors
  codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
  coverage combine --append
  coverage report
  coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

